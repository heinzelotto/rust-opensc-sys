* rust-opensc-sys
Unsafe FFI bindings of [[https://github.com/OpenSC/OpenSC][OpenSC]] for the Rust programming language.

* Licensing

Please note that OpenSC is LGPL-2.1 licensed. IANAL but to my understanding this means that if you plan on distributing a binary and you statically link the library into your binary, then you must make available all you project code under LGPL terms.

This will likely be the case since dynamic linking of single crates is hard to do with Cargo. This crate here (except the vendored copy of OpenSC) is still licensed as MIT/Apache to not create additional problems when you manage to link dynamically.

If you need to statically link then you can double license your project code under MIT or LGPL-2.1 for example, and users of you project can do whatever they want with your part of the code (MIT) unless they statically link it to OpenSC in a binary at which point the LGPL applies. Again, I am not a lawyer.

* Usage

OpenSC is designed to provide a PKCS#11 API and be used as middleware through a set of tools that come with it. This is also why installing OpenSC doesn't install development headers. Using these tools in a script-like manner also satisfies the terms of the LGPL. This crate is for when the tools aren't versatile enough and you want to interface directly with the OpenSC library from Rust, e. g. for talking to a only partially ISO/IEC 7816 conformant card.

These are unsafe FFI Wrappers created by bindgen, please take a look at the safe Rust interface (WIP) instead of using these directly.

The OpenSC shared library must be installed on you system to build the crate.
